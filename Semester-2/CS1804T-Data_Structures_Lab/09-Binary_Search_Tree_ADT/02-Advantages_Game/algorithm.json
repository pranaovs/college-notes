[
  {
    "algorithm": "Find First and Second Maximum Elements",
    "input": [
      "arr - A vector of integers."
    ],
    "output": [
      "max1 - The largest integer value found in the vector.",
      "max2 - The second largest integer value found in the vector."
    ],
    "steps": [
      {
        "step": "Initialize `max1` and `max2` to a value smaller than any expected element (e.g., -1 or the minimum possible integer)."
      },
      {
        "step": "Iterate through each element `num` in the input vector `arr`.",
        "substeps": [
          {
            "step": "If `num` is greater than `max1`:",
            "substeps": [
              {
                "step": "Assign the current value of `max1` to `max2`."
              },
              {
                "step": "Assign `num` to `max1`."
              }
            ]
          },
          {
            "step": "Else if `num` is greater than `max2`:",
            "substeps": [
              {
                "step": "Assign `num` to `max2`."
              }
            ]
          }
        ]
      },
      {
        "step": "After the loop, `max1` holds the maximum value and `max2` holds the second maximum value."
      }
    ]
  },
  {
    "algorithm": "Calculate Element Advantage",
    "input": [
      "arr - A vector of integers.",
      "n - The size of the vector `arr`.",
      "max1 - The largest element in `arr`.",
      "max2 - The second largest element in `arr`."
    ],
    "output": [
      "Prints the calculated advantage for each element of `arr` to standard output, separated by spaces."
    ],
    "steps": [
      {
        "step": "Iterate through the vector `arr` using an index `i` from 0 to `n-1`." ,
        "substeps": [
           {
               "step": "Let the current element be `current_element = arr[i]`."
           },
           {
               "step": "If `current_element` is equal to `max1`:",
               "substeps": [
                  {
                      "step": "Calculate the advantage: `advantage = current_element - max2`."
                  }
               ]
           },
           {
                "step": "Else (if `current_element` is not equal to `max1`):",
                 "substeps": [
                    {
                         "step": "Calculate the advantage: `advantage = current_element - max1`."
                    }
                 ]
           },
           {
               "step": "Print the calculated `advantage` followed by a space."
           }
        ]
      },
      {
          "step": "After the loop finishes, print a newline character."
      }
    ]
  }
]
