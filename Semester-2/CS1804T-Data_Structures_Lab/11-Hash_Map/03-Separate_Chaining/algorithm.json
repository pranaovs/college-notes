[
  {
    "algorithm": "Hash Table Insert (Separate Chaining)",
    "input": [
      "key - The integer value to insert."
    ],
    "output": [
      "Prints a message indicating the insertion index."
    ],
    "steps": [
      {
        "step": "Calculate index: $index = key \\pmod{TABLE\\_SIZE}$."
      },
      {
        "step": "Append `key` to the end of the vector `table[index]`."
      },
      {
        "step": "Print insertion message with `index`."
      }
    ]
  },
  {
    "algorithm": "Hash Table Remove (Separate Chaining)",
    "input": [
      "key - The integer value to remove."
    ],
    "output": [
      "Prints a message indicating success (with index) or failure (not found)."
    ],
    "steps": [
      {
        "step": "Calculate index: $index = key \\pmod{TABLE\\_SIZE}$."
      },
      {
        "step": "Get reference to the vector (bucket): `bucket = table[index]`."
      },
      {
        "step": "Initialize `found = false`."
      },
      {
        "step": "Iterate through `bucket` with index `i` from 0 to `bucket.size() - 1`."
      },
      {
        "step": "Check if `bucket[i] == key`."
      },
      {
        "step": "If true (key found):",
        "substeps": [
          {
            "step": "Erase element at position `i` from `bucket`."
          },
          {
            "step": "Print removal success message with `index`."
          },
          {
            "step": "Set `found = true`."
          },
          {
            "step": "Break the loop."
          }
        ]
      },
      {
        "step": "After loop, check if `!found`."
      },
      {
        "step": "If true (key not found), print 'not found' message."
      }
    ]
  },
  {
    "algorithm": "Hash Table Search (Separate Chaining)",
    "input": [
      "key - The integer value to search for."
    ],
    "output": [
      "Prints a message indicating found (with index and position) or not found."
    ],
    "steps": [
       {
        "step": "Calculate index: $index = key \\pmod{TABLE\\_SIZE}$."
      },
       {
        "step": "Initialize `found = false`."
      },
       {
        "step": "Iterate through vector `table[index]` with index `i` from 0 to `table[index].size() - 1`."
      },
       {
        "step": "Check if `table[index][i] == key`."
      },
      {
        "step": "If true (key found):",
        "substeps": [
           {
            "step": "Print found message with `index` and position `i`."
           },
           {
            "step": "Set `found = true`."
           },
           {
            "step": "Break the loop."
           }
        ]
      },
       {
        "step": "After loop, check if `!found`."
      },
       {
        "step": "If true (key not found), print 'not found' message."
      }
    ]
  }
]
